// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloBD;

namespace ModeloBD.Migrations
{
    [DbContext(typeof(Repositorio))]
    partial class RepositorioModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Estudiante", b =>
                {
                    b.Property<int>("estudianteid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotaPruebaId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("estudianteid");

                    b.HasIndex("NotaPruebaId");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Modelo.NotaGrado", b =>
                {
                    b.Property<int>("NotaGradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Nota1")
                        .HasColumnType("real");

                    b.Property<int?>("NotaPruebaId")
                        .HasColumnType("int");

                    b.Property<int?>("PruebaId")
                        .HasColumnType("int");

                    b.Property<int>("estudianteid")
                        .HasColumnType("int");

                    b.HasKey("NotaGradoId");

                    b.HasIndex("NotaPruebaId");

                    b.HasIndex("PruebaId");

                    b.HasIndex("estudianteid");

                    b.ToTable("NotaGrados");
                });

            modelBuilder.Entity("Modelo.NotaPrueba", b =>
                {
                    b.Property<int>("NotaPruebaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PruebaId")
                        .HasColumnType("int");

                    b.HasKey("NotaPruebaId");

                    b.HasIndex("PruebaId");

                    b.ToTable("NotaPruebas");
                });

            modelBuilder.Entity("Modelo.Prueba", b =>
                {
                    b.Property<int>("PruebaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Nota1")
                        .HasColumnType("real");

                    b.Property<float>("Nota2")
                        .HasColumnType("real");

                    b.Property<float>("Nota3")
                        .HasColumnType("real");

                    b.Property<float>("Nota4")
                        .HasColumnType("real");

                    b.Property<int?>("NotaPruebaId")
                        .HasColumnType("int");

                    b.Property<string>("materia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PruebaId");

                    b.HasIndex("NotaPruebaId");

                    b.ToTable("Pruebas");
                });

            modelBuilder.Entity("Modelo.Estudiante", b =>
                {
                    b.HasOne("Modelo.NotaPrueba", null)
                        .WithMany("Estudiantes")
                        .HasForeignKey("NotaPruebaId");
                });

            modelBuilder.Entity("Modelo.NotaGrado", b =>
                {
                    b.HasOne("Modelo.NotaPrueba", null)
                        .WithMany("NotaGrados")
                        .HasForeignKey("NotaPruebaId");

                    b.HasOne("Modelo.Prueba", null)
                        .WithMany("NotaGrados")
                        .HasForeignKey("PruebaId");

                    b.HasOne("Modelo.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("estudianteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("Modelo.NotaPrueba", b =>
                {
                    b.HasOne("Modelo.Prueba", "Prueba")
                        .WithMany()
                        .HasForeignKey("PruebaId");

                    b.Navigation("Prueba");
                });

            modelBuilder.Entity("Modelo.Prueba", b =>
                {
                    b.HasOne("Modelo.NotaPrueba", null)
                        .WithMany("Pruebas")
                        .HasForeignKey("NotaPruebaId");
                });

            modelBuilder.Entity("Modelo.NotaPrueba", b =>
                {
                    b.Navigation("Estudiantes");

                    b.Navigation("NotaGrados");

                    b.Navigation("Pruebas");
                });

            modelBuilder.Entity("Modelo.Prueba", b =>
                {
                    b.Navigation("NotaGrados");
                });
#pragma warning restore 612, 618
        }
    }
}
